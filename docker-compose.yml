version: '3.9'

networks:
    backend:

volumes:
    mysql:
    redis:

services:

    web:
        image: nginx:1.22
        container_name: nginx
        restart: unless-stopped
        volumes:
            - "./:/var/www/html/backend"
            - "./.build/ssl:/etc/nginx/ssl"
            - "./.build/nginx.conf:/etc/nginx/nginx.conf"
        ports:
            - "8080:80"
            - "443:443"
        depends_on:
            - api
        networks:
            - backend

    api:
        container_name: api
        restart: unless-stopped
        build:
            context: .
        working_dir: /var/www/html/backend
        volumes:
            - "./:/var/www/html/backend"
        ports:
            - "9000:9000"
        depends_on:
            - db
            - redis
        networks:
            - backend

    db:
        image: mysql:8.0
        container_name: mysql
        restart: unless-stopped
        environment:
            MYSQL_ROOT_PASSWORD: ${DB_PASSWORD}
            MYSQL_DATABASE: ${DB_DATABASE}
            MYSQL_USER: ${DB_USERNAME}
            MYSQL_PASSWORD: ${DB_PASSWORD}
        ports:
            - "3306:3306"
        volumes:
            - "./storage/data/mysql:/var/lib/mysql"
        networks:
            - backend
        command: --default-authentication-plugin=mysql_native_password

    redis:
        image: redis:6.2
        container_name: redis
        restart: unless-stopped
        ports:
            - "6379:6379"
        volumes:
            - "./storage/data/redis:/data"
        networks:
            - backend
